#   Copyright 2023 hhiroshell@gmail.com
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
---
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: bookinfo
  labels:
    app: ratings
spec:
  selector:
    app: ratings
  ports:
  - name: http
    port: 9080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings
  namespace: bookinfo
  labels:
    app: ratings
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ratings
  template:
    metadata:
      labels:
        app: ratings
      annotations:
        instrumentation.opentelemetry.io/inject-java: "tracing/auto-instrumentation"
    spec:
      containers:
      - name: ratings
        image: registry.gitlab.com/myaccount/bookinfo-microservices/ratings:ch06
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: QUARKUS_DATASOURCE_JDBC_URL
          valueFrom:
            configMapKeyRef:
              name: ratings
              key: DB_URL
        - name: QUARKUS_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ratings
              key: DB_USER
        - name: QUARKUS_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ratings-db-credentials
              key: rootpasswd
        - name: QUARKUS_SHUTDOWN_TIMEOUT
          value: "20s"
        lifecycle:
          postStart:
            exec:
              command:
              - sh
              - -c
              - |-
                until curl http://localhost:8080/ratings/hello; do
                  sleep 1
                done
                for i in $(seq 10000); do
                  curl -s http://localhost:8080/ratings/hello
                done
          preStop:
            exec:
              command:
              - sh
              - -c
              - |-
                sleep 5
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
      - name: bookinfo-microservices-registry
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ratings
  namespace: bookinfo
  labels:
    app: ratings
data:
  DB_URL: "jdbc:mysql://ratings-db:3306/ratings"
  DB_USER: "root"
